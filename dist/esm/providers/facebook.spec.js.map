{"version":3,"sources":["../../../src/providers/facebook.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,YAAY,CAAC;AAC7C,OAAO,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAK9C,QAAQ,CAAC,iBAAiB,EAAE;IAE1B,IAAI,OAAwB,CAAC;IAE7B,SAAS,CAAC;QACR,OAAO,GAAG,IAAI,eAAe,EAAE,CAAC;QAC/B,MAAc,CAAC,IAAI,CAAC,GAAG;YACtB,IAAI,EAAE,UAAC,MAAkB,IAAK,OAAA,MAAM,EAAN,CAAM;YACpC,KAAK,EAAE,cAAO,CAAC;SAChB,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE;QAC7C,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+CAA+C,EAAE,KAAK,CAAC;QACxD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,UAAA,CAAC;YAC5B,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC;IAEJ,EAAE,CAAC,aAAa,EAAE;QAChB,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAC3C,IAAM,OAAO,GAAe;YAC1B,KAAK,EAAE,kBAAkB;YACzB,OAAO,EAAE,MAAM;SAChB,CAAC;QACF,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE;QACtB,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;QAC1B,OAAO,CAAC,KAAK,EAAE,CAAC;QAChB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAC7C,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","file":"facebook.spec.js","sourceRoot":"","sourcesContent":["import { FacebookService } from './facebook';\r\nimport { async } from '@angular/core/testing';\r\nimport { InitParams } from '../models/init-params';\r\n\r\ndeclare var window: any;\r\n\r\ndescribe('FacebookService', () => {\r\n\r\n  let service: FacebookService;\r\n\r\n  beforeAll(() => {\r\n    service = new FacebookService();\r\n    (window as any)['FB'] = {\r\n      init: (params: InitParams) => params,\r\n      login: () => {}\r\n    };\r\n  });\r\n\r\n  it('should create an instance of the service', () => {\r\n    expect(service).toBeDefined();\r\n  });\r\n\r\n  it('should throw error if we call api before init', async(() => {\r\n    service.api('friends').catch(e => {\r\n      expect(e).toBeDefined();\r\n    });\r\n  }));\r\n\r\n  it('should init', () => {\r\n    spyOn(window.FB, 'init').and.callThrough();\r\n    const options: InitParams = {\r\n      appId: '1927971220769787',\r\n      version: 'v2.8'\r\n    };\r\n    service.init(options);\r\n    expect(window.FB.init).toHaveBeenCalledWith(options);\r\n  });\r\n\r\n  it('should call login', () => {\r\n    spyOn(window.FB, 'login');\r\n    service.login();\r\n    expect(window.FB.login).toHaveBeenCalled();\r\n  });\r\n\r\n});\r\n"]}